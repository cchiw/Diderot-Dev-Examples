
int outSize = 10;
vec2 x=[1,1];


//observed
ofield#2(2)[2] V = poly(x, x);
ofield#1(2)[2,2] GV = ∇⊗V;


ofield#2(2)[] S = poly(x,  x•x);
ofield#1(2)[2] GS = ∇S;
ofield#0(2)[2,2] GGS = ∇⊗∇S;



strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    vec2 pos = [uu,vv];
real x =uu;
real y=vv;
    // ************************ Example V **********************
    //output tensor[2] out=      [pos[0],pos[1]];
    //0.050000001 0.050000001 0.15000001 0.050000001 0.25 0.050000001
    //output tensor[2] out = inst(V,pos);
    //0.050000001 0.050000001 0.15000001 0.050000001 0.25 0.050000001 0.34999999


      // ************************ Example S*********************
    //output tensor[] out = pos[0]*pos[0]+pos[1]*pos[1];
    //0.0050000004 0.025 0.064999998 0.12499999 0.20499998 0.30500001 0.42499995
    //output tensor[] out = inst(S, pos);
    //0.0050000004 0.025 0.064999998 0.12499999 0.20499998 0.30500001 0.42499995


      // ************************ Example GS*********************
    //output tensor[2] out=      [2*pos[0],2*pos[1]];
    //0.1 0.1 0.30000001 0.1 0.5 0.1 0.69999999 0.1 0.89999998 0.1 1.1 0.1 1.3
    output tensor[2] out = inst(GS,pos);
    //0.1 0.1 0.30000001 0.1 0.5 0.1 0.69999999 0.1 0.89999998 0.1 1.1 0.1 1.3

    // ************************ Example GGS*********************
    //output tensor[2,2] out = inst(GGS,pos);
    // 2 0 0 2


      // ************************ Example GV*********************
    //output tensor[2,2] out = inst(GV,pos);
    //1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0

    // ************************ Example GV*********************
   //  output tensor[2,2] out = inst(GGS,pos);
    // 2 0 0 2

    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
