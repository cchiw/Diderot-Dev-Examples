//Gives poly two input tensors
real rad=8;
vec2 v=[1,3];

//Takes two input variables
//ofield#2(2)[2] g = poly(v,rad, rad*v);
//ofield#1(2)[2,2] Dg = ∇⊗g;

//Takes three input variables
vec2 x= [1,1];
ofield#2(2)[2] f = poly(v,rad, x, rad*v+x);
ofield#1(2)[2,2] Df = ∇⊗f;

real a1=1;
real b1=2;
real c1=3;
ofield#2(2)[] k = poly(a1,b1,c1, c1*a1*a1*a1*b1*c1);
ofield#1(2)[2] Dk = ∇k;


int outSize = 10;
strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    vec2 pos = [uu,vv];
    // ************************ Example DG **********************
    // output tensor[2,2] out = [[1*s,0],[0, 1*s]]; // first arg is differentiated
    // [3, 0, 0, 3]
        real ux = u[0];
        real uy = u[1];
        real dxux = 1;
        real dyuy = 1;
        real dxuy = 0;
        real dyux = 0;
        real dxs = 1;
        real dys = 1;
     //output tensor[2,2] out = [[ux*dxs+dxux*s,ux*dys+dyux*s],[uy*dxs+dxuy*s,uy*dys+dyuy*s]];
    // output tensor[2,2] out = inst(Dg, u,s);
    //[4,1,4,7]
    // ************************ Example F **********************
    //output tensor[2] out = u*s+w;//[5,13]
    //output tensor[2] out = inst(f,u,s,w);

    // ************************ Example DF **********************
real wx =w[0];
real dxwx = 1;
real dywx = 0;
real dxwy = 0;
real dywy = 1;
real wy = w[1];

   //  output tensor[2,2] out = [[ux*dxs+dxux*s+dxwx,ux*dys+dyux*s+dywx],[uy*dxs+dxuy*s+dxwy,uy*dys+dyuy*s+dywy]];
  // output tensor[2,2] out = inst(Df,u,s,w);//5 1 4 8


    // ************************ Example Dk **********************
real a=1;
real b=7;
real c=8;
real dx= 0;
real dxc= 2*c;
real dy= 0;
real f =a*a*a*b*c*c;
real s2 = 3*a*a*b*c*c  +a*a*a*b*2*c+a*a*a*1*c*c;
real t2 = s2;

output tensor[2] out = [s2,t2];
// output tensor[2] out = inst(Dk,a,b,c);//1520
    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
