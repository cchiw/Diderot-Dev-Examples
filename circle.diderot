
int outSize = 10;
vec2 x=[1,1];
real rad = 0.1;


poly#1(2)[] enr = ptof(x, 1/tan(|x|/rad*π/2) + (|x|/rad)*π/2 - π/2);

poly#1(2)[] C = ptof(x, (1/(|x|/rad))*(1 - (|x|/rad))^3);






strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    vec2 pos = [uu,vv];



// ************************ Example enr **********************
//output tensor [] out =  1/tan(|pos|/rad*π/2) + (|pos|/rad)*π/2 - π/2;
//0.035467267 -0.3811146 3.2893772 2.8644447 6.4578643 6.0302925 9.6109667
//output tensor[] out=  inst(enr,pos);
//0.035467267 -0.3811146 3.2893772 2.8644447 6.4578643 6.0302925 9.6109667


// ************************ Example frc **********************
//phi'(real r) = (π/2)*(1 - (1/sin((|x|/rad)*π/2))^2);
//output tensor[2] out = (π/2)*(1 - (1/sin((|pos|/rad)*π/2))^2)* (1/rad) * pos/|pos|;
//-2.7275143 -2.7275143 -24.950911 -8.3169699 -11.270805 -2.2541609
//output tensor[2] out=  inst(∇enr,pos);
//-2.7275152 -2.7275152 -24.950916 -8.3169727 -11.270804 -2.2541609


// ************************ Example C **********************
//output tensor [] out  = (1/(|pos|/rad))*(1 - (|pos|/rad))^3;
//0.03553389 -0.12412798 -1.4592385 -4.6105556 -9.6960583 -16.750887
//output tensor[] out=  inst(C,pos);
//0.035533886 -0.12412799 -1.4592385 -4.6105556 -9.6960573 -16.750887

//output tensor [2] out  = (3 - 1/((|pos|/rad)^2) - 2*(|pos|/rad))* (1/rad) * pos/|pos|;
//-2.928931 -2.928931 -5.3342361 -1.7780786 -22.091167 -4.4182334 -41.093472
//output tensor[2] out=  inst(∇C,pos);
-2.9289312 -2.9289312 -5.3342342 -1.7780782 -22.091166 -4.4182334

    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
