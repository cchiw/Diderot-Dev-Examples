
int outSize = 10;
vec3 x=[1,1,1];
real rad = 0.1;

//poly#1(3)[3] A = ptof(x, x);
//poly#1(3)[] B = ptof(x, |x|);
//poly#1(3)[] C = ptof(x, |x|/rad);
//poly#1(3)[] D= ptof(x, 1-(|x|/rad));
poly#1(3)[] enr = ptof(x, (1-(|x|/rad))^4);
//poly#1(3)[] E = ptof(x, sqrt(x•x));






strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    vec3 pos = [uu,vv,uu];
real x  = pos[0];
real y  = pos[1];
real z  = pos[2];

// ************************ Example A **********************
//output tensor[3] out = pos;
//0.050000001 0.050000001 0.050000001 0.15000001 0.050000001 0.15000001 0.25
// output tensor[3] out=  inst(A,pos);
//0.050000001 0.050000001 0.050000001 0.15000001 0.050000001 0.15000001 0.25
//derivative of A
// output tensor[3,3] out=  inst(∇⊗A,pos);
//1 0 0 0 1


    // ************************ Example B **********************
//output tensor[] out = |pos|;
//0.086602539 0.21794495 0.35707143 0.49749371 0.63835722 0.77942288
// output tensor[] out=  inst(B,pos);
//0.086602539 0.21794495 0.35707143 0.49749371 0.63835722 0.77942288

//derivative of B
real denom = 2.0*sqrt(x*x+y*y+z*z);
//output tensor[3] out=  2*[x, y, z]/denom;
//0.57735032 0.57735032 0.57735032 0.6882472 0.22941573 0.6882472 0.70014
//output tensor[3] out=  inst(∇B,pos);
//0.57735032 0.57735032 0.57735032 0.6882472 0.22941573 0.6882472 0.70014



// ************************ Example C **********************
//output tensor[] out = |pos|/rad;
//0.86602539 2.1794496 3.5707142 4.974937 6.3835721 7.7942286 9.2059755
// output tensor[] out=  inst(C,pos);
//0.86602539 2.1794496 3.5707142 4.974937 6.3835721 7.7942286 9.2059755

//derivative of C
//output tensor[3] out=  (2*[x, y, z]/denom)/rad;
//5.7735028 5.7735028 5.7735028 6.882472 2.2941573 6.882472 7.0014005
// output tensor[3] out=  inst(∇C,pos);
//5.7735028 5.7735028 5.7735028 6.882472 2.294157 6.882472 7.0013995



// ************************ Example D **********************
//output tensor[] out = 1-|pos|/rad;
//0.13397461 -1.1794496 -2.5707142 -3.974937 -5.3835721 -6.7942286 -8.2059755
// output tensor[] out=  inst(D,pos);
//0.13397461 -1.1794496 -2.5707142 -3.974937 -5.3835721 -6.7942286 -8.2059755

//derivative of D
//output tensor[3] out=  inst(∇D,pos); (same as delC)
//-5.7735028 -5.7735028 -5.7735028 -6.882472 -2.294157 -6.882472 -7.0013995



// ************************ Example enr **********************
//output tensor[] out = (1-(|pos|/rad))^4;
//0.00032217367 1.9351627 43.673218 249.64392 840.00549 2130.8879 4534.4106
//output tensor[] out=  inst(enr,pos);
//0.00032217367 1.9351627 43.673218 249.64392 840.00555 2130.8879 4534.4111




// ************************ Example frc **********************
//output tensor[3] out = (-4*(1-(|pos|/rad))^3)*(1/rad)*(pos/|pos|);
//-0.055535022 -0.055535022 -0.055535022 45.169216 15.056405 45.16921
output tensor[3] out=  inst(∇enr,pos);
//-0.055535015 -0.055535015 -0.055535015 45.169216 15.056403 45.169216
    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
