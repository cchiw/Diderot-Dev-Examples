tensor[3] pos=[4,5,6];
//data
image(3)[3] u = image("../data/inputfile0.nrrd");
image(3)[3] v = image("../data/inputfile1.nrrd");
image(3)[] c = image("../data/out.nrrd");
image(3)[] m = image("../data/out.nrrd");

kernel#4 k= c4hexic;
field#4(3)[3]U =k⊛ u;
field#4(3)[3]V =k⊛ v;
field#4(3)[]C =k⊛ c;
field#4(3)[]M =k⊛ m;



//PVO
//field#4(3)[]G =  (V/|V|)•(U/|U|);
//canny
//field#2(3)[] G = -∇(∇C•∇C) • (∇C/|∇C|);
//moe
field#2(3)[] G = -∇(|∇M|) • ∇M/|∇M|;



int length =1;
strand f(int i) {


  //output tensor[] out =  (G)(pos);
 //output tensor[3] out =  ∇(G)(pos);
    output tensor[3,3] out = ∇⊗ ∇(G)(pos);


    update {
        stabilize;
    }
}
initially [ f(i) | i in 0..length];