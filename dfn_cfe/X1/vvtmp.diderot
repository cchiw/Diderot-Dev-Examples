int outSize = 10;
vec2 x=[1,1];

//observed
tensor [] exp = x•x;
ofield#2(2)[] S = cfexp(exp,x);
ofield#1(2)[2] GS = ∇S;
ofield#0(2)[2,2] GGS = ∇⊗∇S;

strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    //real uu = 2;
    //real vv= 6;
    vec2 pos = [uu,vv];
    real x =uu;
    real y=vv;

    // ************************ Example S*********************

    //output tensor[] out = pos[0]*pos[0]+pos[1]*pos[1];
    //output tensor[] out = inst(S, pos);
    //Expected solution: 0.0050000004 0.025 0.064999998 0.12499999 0.20499998 0.30500001 0.42499995

    //output tensor[] out = pos[0]*pos[0]+pos[1]*pos[1]-inst(S, pos);
    // output tensor[] out = inst(S, pos)- (pos[0]*pos[0]+pos[1]*pos[1]); //Expected solution: 0

    // ************************ Example GS*********************

    //output tensor[2] out=[2*pos[0],2*pos[1]];
    //output tensor[2] out = inst(GS,pos);
    //Expected solution: 0.1 0.1 0.30000001 0.1 0.5 0.1 0.69999999 0.1 0.89999998 0.1 1.1 0.1 1.3
    //output tensor[2] out= [2*pos[0],2*pos[1]]- inst(GS,pos); //Expected solution: 0
    output int cat=printIR(GS,"GSr");

    // ************************ Example GGS*********************

    //output tensor[2,2] out = inst(GGS,pos);
    //Expected solution: 2 0 0 2
    output int cut=printIR(GGS,"GGSr");

    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
