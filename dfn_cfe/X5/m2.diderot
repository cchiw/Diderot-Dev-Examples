//Takes three input variables
real rad=8;
vec2 v=[1,3];
vec2 x= [1,1];
field#2(2)[2] f = cfexp(rad*v+x,x,v,rad);
field#1(2)[2,2] Df = ∇⊗f;

int outSize = 10;
strand sample (int ui, int vi) {
    real uu = lerp(0.0, 1.0, -0.5, real(ui), real(outSize)-0.5);
    real vv = lerp(0.0, 1.0, -0.5, real(vi), real(outSize)-0.5);
    vec2 pos = [uu,vv];
    real s = 3;
    tensor[2] u =[1,4];
    tensor[2] w =[2,1];

    // ************************ Example F **********************

    //output tensor[2] out = u*s+w;//Expected Solution:[5,13]
    //output tensor[2] out = inst(f,w,u,s);

    //output tensor[2] out = u*s+w-inst(f,w,u,s);
    //output tensor[2] out = inst(f,w,u,s)-(u*s+w);

    // ************************ Example DF **********************
    real ux = u[0];
    real uy = u[1];
    real dxux = 1;
    real dyuy = 1;
    real dxuy = 0;
    real dyux = 0;
    real dxs = 1;
    real dys = 1;
    real wx =w[0];
    real dxwx = 1;
    real dywx = 0;
    real dxwy = 0;
    real dywy = 1;
    real wy = w[1];

    //output tensor[2,2] out = [[ux*dxs+dxux*s+dxwx,ux*dys+dyux*s+dywx],[uy*dxs+dxuy*s+dxwy,uy*dys+dyuy*s+dywy]];
    //output tensor[2,2] out = inst(Df,w,u,s);//Expected Solution: 5 1 4 8


    //output tensor[2,2] out = [[ux*dxs+dxux*s+dxwx,ux*dys+dyux*s+dywx],[uy*dxs+dxuy*s+dxwy,uy*dys+dyuy*s+dywy]]-inst(Df,w,u,s);//Expected Solution:0
    output tensor[2,2] out = inst(Df,w,u,s)-([[ux*dxs+dxux*s+dxwx,ux*dys+dyux*s+dywx],[uy*dxs+dxuy*s+dxwy,uy*dys+dyuy*s+dywy]]);

    update {
             stabilize;
    }
}

initially [ sample(ui, vi) | vi in 0..(outSize-1), ui in 0..(outSize-1) ];
