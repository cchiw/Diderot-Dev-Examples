

 input fem#4(2)[] FF0;
 //Field:field #4(2)[] F0=2*x**2*y + 3*x**2 - x*y - 4*x + y**2*(-3*x**2 + 4*x - 1) - 4*y + 2
mesh M = UnitSquareMesh(4,4);
element E = P();
 fnspace VF0 = FunctionSpace(M,E, 4);
 string pathF0 = "/Users/chariseechiw/diderot/Diderot-Dev/fnspace_data/";
 ofield#4(2)[] F0 = convert(FF0,VF0,pathF0);

ofield#3(2)[2]G = âˆ‡(F0);
int length =7;
strand f(int i) {

	output tensor [2] out =  [0.0,0.0];
	    update {

		tensor [2] pos=[0,0];
		if(i==0){
			pos = ([0.24, 0.09]);
		}
		else if(i==1){
			pos = ([0.24, 0.09]);
		}
		else if(i==2){
			pos = ([0.01, 0.22]);
		}
		else if(i==3){
			pos = ([0.13, 0.49]);
		}
		else if(i==4){
			pos = ([0.8, 0.64]);
		}
		else if(i==5){
			pos = ([0.45, 0.67]);
		}
		else if(i==6){
			pos = ([0.84, 0.35]);
		}
		else if(i==7){
			pos = ([0.12, 0.66]);
		}

	if((insideF(pos,F0)) && true){
			out = inst(G,pos);
	}
	 else{out =  [7.2,7.2];}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];